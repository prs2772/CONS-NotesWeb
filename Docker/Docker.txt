Images management
-> docker pull [Image to download and version ex. node:18] - downloads an image
-> docker pull --platform linux/x86_64 [Image to download and version ex. mysql] - Use instead of docker pull if it doesnt work
-> docker image rm [Image repository/image name] - Remove image
-> docker images - Shows all images we have and their information

Container list
-> docker ps - Gets a list with the containers running atm
-> docker ps -a - Gets a list with all the containers on our system
-> docker logs [containers_name]

Containers create and remove 
-> docker create [opc. --name name_for_container] [Name of the image to use as container ex. mongo] - Creates ane container
-> docker create [-p[Physical port or local]:[Port of the container to map]] ...
-> docker create [-pPort of the container to map] ... - Assign automatically the local port
-> docker create [-eEnvironment Variable Name -eMONGO_INITDB_ROOT_USERNAME=valor] ... - Assign automatically the local port, ex. docker create -p27017:27018 --name monguito -e MONGO_INITDB_ROOT_USERNAME=nico -e MONGO_INITDB_ROOT_PASSWORD=password mongo
-> docker container rm [Name of the container/Id to remove] - Removes a Docker container
-> docker run -d [Image to download and create a container] - combines docker pull and docker create. Can be combined with --name and -p

Container start and stop
-> docker start [Id generated by docker create] - Starts a container
-> docker stop [Id from docker ps] - Stops a container

Networking
-> docker network ls - Lists all networks
-> docker network create [name of the network]
-> docker network rm [name of the network to delete]


Notes:
- All images are based on other images.
- Dockerfile:
  FROM node:18 (Base image)
  RUN mkdir -p /home/app (Directory where source app's code is going to be saved taking as / or root, the actual relative location)
  COPY . /home/app (Instead run, to access in every OS. Copies source_destiny the source code)
  EXPOSE 3000 (Allows connection to this container exposing one port)
  CMD ["node", "/home/app/index.js"] (Command to run our app)
- A network allows isolation or communication between other containers.

Steps:
1.- Download image -> Create container with that image -> Start the container -> stop container -> Remove by name -> reate new with a name -> Port mapping -> Remove everything (min 46)
2.- 



